// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function() {
    var Animation;
    return Animation = (function() {
      function Animation(CE, options) {
        this.update = bind(this.update, this);
        this.currentFrame = options.currentFrame || 0;
        this.loadedFrame = -1;
        this.maxFrame = options.maxFrame || 0;
        this.slowing = options.slowing || 1;
        this._counter = 0;
        this.loop = options.loop != null ? options.loop : true;
        this.autoPlay = options.autoPlay != null ? options.autoPlay : true;
        this.playing = false;
        options.type = "image";
        if (options.from != null) {
          if (Array.isArray(options.from)) {
            this.setFrames(options.from);
            options.from = this.frames[this.currentFrame];
          }
        }
        if (options.src != null) {
          if (Array.isArray(options.src)) {
            this.setFrames(options.src);
            options.src = this.frames[this.currentFrame];
          }
        }
        this.image = CE.add(options);
        CE.addEvent(this.update);
        if (this.autoPlay) {
          this.play();
        }
      }

      Animation.prototype.play = function(frame) {
        this.currentFrame = frame || this.currentFrame;
        if (this.currentFrame > this.maxFrame || this.currentFrame < 0) {
          this.currentFrame = 0;
        }
        return this.playing = true;
      };

      Animation.prototype.pause = function() {
        return this.playing = false;
      };

      Animation.prototype.stop = function() {
        this.playing = false;
        return this.currentFrame = 0;
      };

      Animation.prototype.setFrames = function(frames) {
        this.frames = frames;
        this.maxFrame = this.frames.length - 1;
        if (this.currentFrame > this.maxFrame || this.currentFrame < 0) {
          return this.currentFrame = 0;
        }
      };

      Animation.prototype.update = function() {
        var img;
        if (this.playing) {
          this._counter++;
          if (this.slowing === 1 || this._counter % this.slowing === 0) {
            this.currentFrame++;
            this._counter = 0;
            if (this.currentFrame > this.maxFrame) {
              if (this.loop) {
                this.currentFrame = 0;
              } else {
                this.currentFrame = -1;
                this.playing = false;
              }
            }
            if (this.playing && this.loadedFrame !== this.currentFrame) {
              img = this.frames[this.currentFrame];
              if (typeof img === "string") {
                this.image.src(img);
              } else {
                this.image.from(img);
              }
              return this.loadedFrame = this.currentFrame;
            }
          }
        }
      };

      return Animation;

    })();
  });

}).call(this);
