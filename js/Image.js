// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["DisplayObject"], function(DisplayObject) {
    var Image;
    return Image = (function(superClass) {
      extend(Image, superClass);

      function Image(options) {
        Image.__super__.constructor.call(this, options);
        this.onload = options.onload;
        if (options.src != null) {
          this._image = document.createElement("img");
          this.needAnimation = false;
          this._loaded = false;
          this.setSrc(options.src);
        } else {
          this.from(options.from);
        }
      }

      Image.prototype.setSrc = function(src) {
        this._loaded = false;
        this._image.onload = (function(_this) {
          return function() {
            _this._realSizes = [_this._image.width, _this._image.height];
            if ((_this._sizes[0] <= 0) || (_this._sizes[1] <= 0)) {
              _this._sizes = _this._realSizes;
            }
            _this.needAnimation = true;
            _this._loaded = true;
            if (_this.onload != null) {
              return _this.onload(_this._realSizes);
            }
          };
        })(this);
        return this._image.src = src;
      };

      Image.prototype.from = function(from) {
        this._image = from.image;
        this._src = from.src;
        this._realSizes = from.sizes;
        if ((this._sizes[0] <= 0) || (this._sizes[1] <= 0)) {
          this._sizes = this._realSizes;
        }
        this._loaded = true;
        return this.needAnimation = true;
      };

      Image.prototype.addEvent = function(eventName, func) {
        return this._image.addEventListener(eventName, func);
      };

      Image.prototype.removeEvent = function(eventName, func) {
        return this._image.removeEventListener(eventName, func);
      };

      Image.prototype.getSizes = function() {
        return this._sizes;
      };

      Image.prototype.getRealSizes = function() {
        return this._realSizes;
      };

      Image.prototype.animate = function(context) {
        if (!this._loaded) {
          return;
        }
        Image.__super__.animate.call(this, context);
        if ((this._sizes[0] === this._realSizes[0]) && (this._sizes[1] === this._realSizes[1])) {
          context.drawImage(this._image, this._deltaX, this._deltaY);
        } else {
          context.drawImage(this._image, this._deltaX, this._deltaY, this._sizes[0], this._sizes[1]);
        }
        context.restore();
        return this.needAnimation = false;
      };

      return Image;

    })(DisplayObject);
  });

}).call(this);
