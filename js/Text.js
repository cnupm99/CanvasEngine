// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["DisplayObject"], function(DisplayObject) {
    var Text;
    return Text = (function(superClass) {
      extend(Text, superClass);

      function Text(options) {
        Text.__super__.constructor.call(this, options);
        this.setFont(options.font);
        this.setText(options.text || "");
        this.fillStyle(options.fillStyle);
        this._strokeStyle = options.strokeStyle || false;
        this._strokeWidth = options.strokeWidth || 1;
        this.needAnimation = true;
      }

      Text.prototype.setText = function(text) {
        this._text = text;
        this._context.save();
        this._context.font = this._font;
        this.width = this._context.measureText(this._text).width;
        this._context.restore();
        return this.needAnimation = true;
      };

      Text.prototype.fillStyle = function(style) {
        this._fillStyle = style || false;
        return this.needAnimation = true;
      };

      Text.prototype.strokeStyle = function(style) {
        this._strokeStyle = style || false;
        return this.needAnimation = true;
      };

      Text.prototype.setFont = function(font) {
        var span;
        this._font = font || "12px Arial";
        span = document.createElement("span");
        span.appendChild(document.createTextNode("height"));
        span.style.cssText = "font: " + this._font + "; white-space: nowrap; display: inline;";
        document.body.appendChild(span);
        this.fontHeight = span.offsetHeight;
        document.body.removeChild(span);
        return this.needAnimation = true;
      };

      Text.prototype.animate = function(context) {
        var gradient;
        if (context == null) {
          context = this._context;
        }
        Text.__super__.animate.call(this, context);
        context.font = this._font;
        context.textBaseline = "top";
        if (this._fillStyle) {
          if (Array.isArray(this._fillStyle)) {
            gradient = context.createLinearGradient(this._deltaX, this._deltaY, this._deltaX, this._deltaY + this.fontHeight);
            this._fillStyle.forEach(function(color) {
              return gradient.addColorStop(color[0], color[1]);
            });
            context.fillStyle = gradient;
          } else {
            context.fillStyle = this._fillStyle;
          }
          context.fillText(this._text, this._deltaX, this._deltaY);
        }
        if (this._strokeStyle) {
          context.strokeStyle = this._strokeStyle;
          context.lineWidth = this._strokeWidth;
          context.strokeText(this._text, this._deltaX, this._deltaY);
        }
        context.restore();
        return this.needAnimation = false;
      };

      return Text;

    })(DisplayObject);
  });

}).call(this);
