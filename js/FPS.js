// Generated by CoffeeScript 1.10.0
(function() {
  "use strict";
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(function() {
    var FPS;
    return FPS = (function() {
      function FPS(options) {
        this._onTimer = bind(this._onTimer, this);
        this._scene = options.scene;
        this._graph = this._scene.add({
          type: "graph"
        });
        this._values = [];
        this._caption = this._scene.add({
          type: "text",
          fillStyle: "#00FF00",
          font: "10px Arial",
          position: [3, 1]
        });
        this._caption2 = this._scene.add({
          type: "text",
          fillStyle: "#FF0000",
          font: "10px Arial",
          position: [48, 1]
        });
        this.start();
        this._onTimer();
      }

      FPS.prototype.start = function() {
        this._counter = this._updateCounter = this._FPSValue = 0;
        return this._interval = setInterval(this._onTimer, 1000);
      };

      FPS.prototype.stop = function() {
        clearInterval(this._interval);
        return this._counter = this._updateCounter = this._FPSValue = 0;
      };

      FPS.prototype._onTimer = function() {
        var fps, i, j, ref, ups, x;
        this._FPSValue = this._counter;
        this._counter = 0;
        this._updateValue = this._updateCounter;
        this._updateCounter = 0;
        this._values.push([this._FPSValue, this._updateValue]);
        if (this._values.length === 84) {
          this._values.shift();
        }
        this._graph.clear();
        this._graph.fillStyle("#000");
        this._graph.rect(0, 0, 90, 40);
        this._graph.fill();
        for (i = j = 0, ref = this._values.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
          x = 87 - this._values.length + i;
          fps = this._values[i][0];
          ups = this._values[i][1];
          this._graph.strokeStyle("#00FF00");
          this._graph.line(x, 37, x, 37 - 23 * fps / 60);
          this._graph.strokeStyle("#FF0000");
          this._graph.line(x, 37, x, 37 - 23 * ups / 60);
        }
        this._caption.setText("FPS: " + this._FPSValue);
        return this._caption2.setText("UPS: " + this._updateValue);
      };

      FPS.prototype.update = function(needAnimation) {
        this._counter++;
        if (needAnimation) {
          return this._updateCounter++;
        }
      };

      return FPS;

    })();
  });

}).call(this);
